package net.interdoodle.hbe.domain

import akka.stm.Ref
import akka.actor.Actor
import akka.event.EventHandler
import net.interdoodle.hbe.message.{MonkeyResult, PageGenerated, TypingRequest, SimulationStatus}
import collection.mutable.{HashMap, LinkedList}

/** Monkey god (supervises Monkey supervisors)
 * @author Mike Slinn */

class Hanuman (val simulationID:String,
               val document:String,
               val simulationStatusRef:Ref[SimulationStatus]) extends Actor {
  var simulationStatus = simulationStatusRef.get
  val monkeyResultRefList = new HashMap[String, Ref[MonkeyResult]]()
  var running = true // is this boolean required or is there a better way?
  var monkeysPerVisor = 10


  override def postStop() {
    running = false
  }

  override def preStart() {
    createMonkeyVisor()
    while (running)
      tick() // until this Actor is stopped
  }

  def createMonkeyVisor() {
    val monkeyResult = new MonkeyResult()
    val monkeyVisorRef = Actor.actorOf(new MonkeyVisor(simulationID, document, monkeysPerVisor, monkeyResultRefList)).start()
    simulationStatus.putSimulation(simulationID, Some(monkeyVisorRef))
  }

  def receive = {
    case _ => EventHandler.info(this, "Monkey received an unknown message")
  }

  // TODO simulate time slice, wherein a page is generated by each monkey
  def tick() {
  }
}